
full cost function:



cost(deleting i) = jockey[i]

total_damage(deleting i) = i+1 - any above you that are now cost more to kill + (plus ones above)

some type of prefix sum?

4 1 1 1 4 1 3
4 5 6 7 11 12 15

PFS of health - fall_damage
4 0 -1 -2 0 -4 3
4 0 3 1 1 -3 0

PFS of health - max(fall_damage,0) // to keep track of how much damage everyone "missed out on" above you if you take your option; 

Formula: (Current health minus fall damage) - missed out damage.

missed out damage = 
4 1 1 1 4 1 3
Potential fall damage:
0 1 2 3 4 5 6

if we take i=3 out, 1 misses out on zero fall damage, and 3 misses out on two; sum of all of these missed out fall damages is the cost?
        X 

        how much damage you could do - minus - how much you could take after it is over.
        * tricky part * it can 





running sum resetting at zero if negative
4 4 3 1 1 0 3

This is the only one that clearly marks take the 1 (minimum value, or value is zero) but why?


try random examples:

1 1 1 1

1 0 -1 -2

1 0 0 0

in this case everything is zero except one. you need to take the 1 for optimal


4 4
1 0
1 -1
1 -2
4 0
1 -4
3 -3

